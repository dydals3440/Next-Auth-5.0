// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?
 // userId는 User모델의 릴레이션. 참조 설정
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String? // Optional OAuth Provider Google Github인경우 필요없음 비번이.
  role          UserRole @default(USER)
  accounts      Account[] // relation model Account의
}

model VerificationToken {
  id String @id @default(cuid())
  email String
  token String @unique
  expires DateTime
  // email에 하나의 유효한 토큰만 있음.
  @@unique([email, token])
}